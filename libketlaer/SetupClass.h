
/*
 * NEVER change function order in this classes, they have to be
 * binary compatible with the library!
 */

#define setup SetupClass::m_ptr

class _IPV4 {
public:
  unsigned char ucIP[4];
};

typedef _IPV4 IPV4;

/*system/Include/Application/AppClass/SetupClass.h*/
class SetupClass {
private:
  ENUM_VIDEO_SYSTEM   video_system;
  ENUM_VIDEO_STANDARD video_standard;
  ENUM_ASPECT_RATIO   aspect_ratio;
  int                 brightness;
  int                 contrast;
  ENUM_VIDEO_OUTPUT   video_output;
  ENUM_SPEAKER_OUT    speaker_out;
  ENUM_AUDIO_AGC_MODE agc_mode;
  ENUM_SPDIF_MODE     spdif_mode;

public:
  static SetupClass *m_ptr;
  SetupClass();
  virtual ~SetupClass();
  virtual void Init();
  virtual void Create();
  virtual HRESULT Sync();
  virtual HRESULT AutoSync();
  virtual void RestoreFactoryDefault();
  virtual int SetNetWlan0ProfileCopy(int, int);
  virtual int SetNetWlan0ProfileToDefault(int);
  virtual RECTANGLE_DIMENSION GetDimension(ENUM_VIDEO_SYSTEM);
  virtual ENUM_OSD_LANGUAGE GetOsdLanguage();
  virtual void SetOsdLanguage(ENUM_OSD_LANGUAGE);
  virtual ENUM_AUDIO_LANGUAGE GetAudioLanguage();
  virtual void SetAudioLanguage(ENUM_AUDIO_LANGUAGE);
  virtual ENUM_SUBTITLE_LANGUAGE GetSubtitleLanguage();
  virtual void SetSubtitleLanguage(ENUM_SUBTITLE_LANGUAGE);
  virtual ENUM_MENU_LANGUAGE GetMenuLanguage();
  virtual void SetMenuLanguage(ENUM_MENU_LANGUAGE);
  virtual ENUM_TEXT_ENCODING GetTextSubtitleEncoding();
  virtual void SetTextSubtitleEncoding(ENUM_TEXT_ENCODING);
  virtual int GetTextSubtitleYOffset();
  virtual void SetTextSubtitleYOffset(int);
  virtual int GetTextSubtitleSize();
  virtual void SetTextSubtitleSize(int);
  virtual ENUM_SUBTITLE_TEXT_COLOR GetTextSubtitleColor();
  virtual void SetTextSubtitleColor(ENUM_SUBTITLE_TEXT_COLOR);
  virtual int GetTextSubtitleOffset();
  virtual void SetTextSubtitleOffset(int);
  virtual ENUM_VIDEO_SYSTEM GetTvSystem();
  virtual void SetTvSystem(ENUM_VIDEO_SYSTEM a1);
  virtual ENUM_VIDEO_SYSTEM GetVideoSDSystem();
  virtual void SetVideoSDSystem(ENUM_VIDEO_SYSTEM);
  virtual ENUM_VIDEO_HD_SYSTEM GetVideoHDSystem();
  virtual void SetVideoHDSystem(ENUM_VIDEO_HD_SYSTEM);
  virtual ENUM_ON_OFF GetVideoSystem1080P24HZ();
  virtual void SetVideoSystem1080P24HZ(ENUM_ON_OFF);
  virtual int GetErrorConcealmentLevel();
  virtual void SetErrorConcealmentLevel(int);
  virtual ENUM_TV_SYSTEM_AUTO_MODE GetTvSystemAutoMode();
  virtual void SetTvSystemAutoMode(ENUM_TV_SYSTEM_AUTO_MODE);
  virtual ENUM_VIDEO_STANDARD GetTvStandard();
  virtual void SetTvStandard(ENUM_VIDEO_STANDARD a1);
  virtual ENUM_VIDEO_REC_SYSTEM GetRecTvSystem();
  virtual void SetRecTvSystem(ENUM_VIDEO_REC_SYSTEM);
  virtual ENUM_ON_OFF GetAutoTvSystem();
  virtual void SetAutoTvSystem(ENUM_ON_OFF);
  virtual ENUM_ON_OFF GetVideoPreprocessing();
  virtual void SetVideoPreprocessing(ENUM_ON_OFF);
  virtual ENUM_ON_OFF GetCopyProtection();
  virtual void SetCopyProtection(ENUM_ON_OFF);
  virtual ENUM_REC_QUALITY GetRecQuality();
  virtual void SetRecQuality(ENUM_REC_QUALITY);
  virtual ENUM_AUTO_CHAPTER GetAutoChapter();
  virtual void SetAutoChapter(ENUM_AUTO_CHAPTER);
  virtual ENUM_REC_DEVICE GetRecDevice();
  virtual void SetRecDevice(ENUM_REC_DEVICE);
  virtual ENUM_REC_DEVICE GetTimeShiftDevice();
  virtual void SetTimeShiftDevice(ENUM_REC_DEVICE);
  virtual char * GetLastRecFile();
  virtual void SetLastRecFile(char*);
  virtual ENUM_ON_OFF GetAutoTimeshift();
  virtual void SetAutoTimeshift(ENUM_ON_OFF);
  virtual ENUM_SLIDE_SHOW_TIME GetSlideShowTime();
  virtual void SetSlideShowTime(ENUM_SLIDE_SHOW_TIME);
  virtual ENUM_TRANS_EFFECT GetTeansEffect();
  virtual void SetTeansEffect(ENUM_TRANS_EFFECT);
  virtual ENUM_MIX_PLAY GetMixPlay();
  virtual void SetMixPlay(ENUM_MIX_PLAY);
  virtual ENUM_TIME_ZONE GetTimeZone();
  virtual void SetTimeZone(ENUM_TIME_ZONE);
  virtual ENUM_ON_OFF GetDayLightSaving();
  virtual void SetDayLightSaving(ENUM_ON_OFF);
  virtual ENUM_ON_OFF GetPowerSaving();
  virtual void SetPowerSaving(ENUM_ON_OFF);
  virtual int GetRatingIsBlockUnrated();
  virtual void SetRatingIsBlockUnrated(int);
  virtual int GetRatingIsEnable();
  virtual void SetRatingIsEnable(int);
  virtual ENUM_RATING_LEVEL GetRatingLevel();
  virtual void SetRatingLevel(ENUM_RATING_LEVEL);
  virtual ENUM_RATING_REGION GetRatingRegion();
  virtual void SetRatingRegion(ENUM_RATING_REGION);
  virtual unsigned char GetRatingType(ENUM_RATING_LEVEL);
  virtual void SetRatingType(ENUM_RATING_LEVEL, unsigned char);
  virtual OPENVCHIP_TABLE_INFO * GetOpenVChipTable();
  virtual OPEN_VCHIP_RATING_INFO * GetOpenVChipRatingInfo();
  virtual void SetOpenVChip();
  virtual int GetRatingTimeout();
  virtual void SetRatingTimeout(int);
  virtual int GetRatingPasswd();
  virtual void SetRatingPasswd(int);
  virtual bool IsRatingPasswdCorrect(int);
  virtual int GetTVRatingBitwiseValue();
  virtual void SetTVRatingBitwiseValue(int);
  virtual int GetTVxRatingBitwiseValue();
  virtual void SetTVxRatingBitwiseValue(int);
  virtual bool GetAutoPlay();
  virtual void SetAutoPlay(bool);
  virtual ENUM_ON_OFF GetSeamlessPlayback();
  virtual void SetSeamlessPlayback(ENUM_ON_OFF);
  virtual ENUM_ASPECT_RATIO GetAspectRatio();
  virtual void SetAspectRatio(ENUM_ASPECT_RATIO a1);
  virtual int GetBrightness();
  virtual void SetBrightness(int a1);
  virtual int GetContrast();
  virtual void SetContrast(int a1);
  virtual ENUM_VIDEO_OUTPUT GetVideoOutput();
  virtual void SetVideoOutput(ENUM_VIDEO_OUTPUT a1);
  virtual ENUM_ON_OFF GetVideoDNRMode();
  virtual void SetVideoDNRMode(ENUM_ON_OFF);
  virtual ENUM_ON_OFF GetVideoZoomOutMode();
  virtual void SetVideoZoomOutMode(ENUM_ON_OFF);
  virtual int GetCurrentHdmiTVVid();
  virtual void SetCurrentHdmiTVVid(int);
  virtual ENUM_ON_OFF GetAngleMark();
  virtual void SetAngleMark(ENUM_ON_OFF);
  virtual ENUM_REGION_SETTING GetRegionCode();
  virtual void SetRegionCode(ENUM_REGION_SETTING);
  virtual ENUM_SECURITY_SETTING GetSecuritySetting();
  virtual void SetSecuritySetting(ENUM_SECURITY_SETTING);
  virtual bool GetInitialFlag();
  virtual void SetInitialFlag(bool a1);
  virtual ENUM_SPEAKER_OUT GetSpeakerOut();
  virtual void SetSpeakerOut(ENUM_SPEAKER_OUT a1);
  virtual ENUM_AUDIO_DIGITAL_OUTPUT_MODE GetHdmiAudioOutputMode();
  virtual void SetHdmiAudioOutputMode(ENUM_AUDIO_DIGITAL_OUTPUT_MODE);
  virtual ENUM_AUDIO_DIGITAL_OUTPUT_MODE GetSpdifAudioOutputMode();
  virtual void SetSpdifAudioOutputMode(ENUM_AUDIO_DIGITAL_OUTPUT_MODE);
  virtual ENUM_SPDIF_MODE GetSpdifMode();
  virtual void SetSpdifMode(ENUM_SPDIF_MODE a1);
  virtual bool GetDolbyPrologicEnable();
  virtual void SetDolbyPrologicEnable(bool);
  virtual ENUM_AUDIO_AGC_MODE GetAudioAGCMode();
  virtual void SetAudioAGCMode(ENUM_AUDIO_AGC_MODE a1);
  virtual void SetSortingModeHDD(SortMode);
  virtual SortMode GetSortingModeHDD();
  virtual void SetSortingModeDISC(SortMode);
  virtual SortMode GetSortingModeDISC();
  virtual void SetKaraokeMode(ENUM_ON_OFF);
  virtual ENUM_ON_OFF GetKaraokeMode();
  virtual int GetMic1Volume();
  virtual void SetMic1Volume(int);
  virtual int GetMic2Volume();
  virtual void SetMic2Volume(int);
  virtual int GetMusicVolume();
  virtual void SetMusicVolume(int);
  virtual int GetMicEcho();
  virtual void SetMicEcho(int);
  virtual VOCAL_REMOVAL_MODE GetVocalRemovalMode();
  virtual void SetVocalRemovalMode(VOCAL_REMOVAL_MODE);
  virtual ENUM_KEY_SHIFT_STONE GetKeyShiftStone();
  virtual void SetKeyShiftStone(ENUM_KEY_SHIFT_STONE);
  virtual ENUM_EQUALIZER_MODE GetEqualizerMode();
  virtual void SetEqualizerMode(ENUM_EQUALIZER_MODE);
  virtual KARAOKE_REVERB_MODE GetReverbMode();
  virtual void SetReverbMode(KARAOKE_REVERB_MODE);
  virtual SourceOption GetSource();
  virtual void SetSource(SourceOption);
  virtual DeviceOption GetDevice();
  virtual void SetDevice(DeviceOption);
  virtual int GetVolume();
  virtual void SetVolume(int);
  virtual int GetCurrChannel();
  virtual void SetCurrChannel(int);
  virtual int GetCurDtvChannelIndex();
  virtual void SetCurDtvChannelIndex(int);
  virtual DTV_REGION GetDtvRegion();
  virtual void SetDtvRegion(DTV_REGION);
  virtual RESUME_SETTING GetResumeMode();
  virtual void SetResumeMode(RESUME_SETTING);
  virtual unsigned int GetSignature(void **sig);
  virtual void SetSignature(void*, unsigned int);
  virtual unsigned int GetBookmark(void **book);
  virtual void SetBookmark(void*, unsigned int);
  virtual bool GetNetEth0Enable();
  virtual void SetNetEth0Enable(bool);
  virtual bool GetNetEth0DHCPEnable();
  virtual void SetNetEth0DHCPEnable(bool);
  virtual IPV4 *GetNetEth0IPAddr();
  virtual void SetNetEth0IPAddr(IPV4*);
  virtual IPV4 *GetNetEth0Mask();
  virtual void SetNetEth0Mask(IPV4*);
  virtual IPV4 *GetNetEth0Gateway();
  virtual void SetNetEth0Gateway(IPV4*);
  virtual IPV4 *GetNetDNS();
  virtual void SetNetDNS(IPV4*);
  virtual bool GetNetWlan0Enable();
  virtual void SetNetWlan0Enable(bool);
  virtual int GetNetWlan0Profile();
  virtual void SetNetWlan0Profile(int);
  virtual int GetNetWlan0ProfilePreSetting();
  virtual void SetNetWlan0ProfilePreSetting(int);
  virtual char *GetNetWlan0ProfileName();
  virtual char *GetNetWlan0ProfileName(int);
  virtual void SetNetWlan0ProfileName(char*, int);
  virtual ENUM_WIRELESS_MODE GetNetWlan0Mode();
  virtual ENUM_WIRELESS_MODE GetNetWlan0Mode(int);
  virtual void SetNetWlan0Mode(ENUM_WIRELESS_MODE, int);
  virtual bool GetNetWlan0DHCPEnable();
  virtual bool GetNetWlan0DHCPEnable(int);
  virtual void SetNetWlan0DHCPEnable(bool, int);
  virtual IPV4 *GetNetWlan0IPAddr();
  virtual IPV4 * GetNetWlan0IPAddr(int);
  virtual void SetNetWlan0IPAddr(IPV4*, int);
  virtual IPV4 *GetNetWlan0Mask();
  virtual IPV4 *GetNetWlan0Mask(int);
  virtual void SetNetWlan0Mask(IPV4*, int);
  virtual IPV4 *GetNetWlan0Gateway();
  virtual IPV4 *GetNetWlan0Gateway(int);
  virtual void SetNetWlan0Gateway(IPV4 *a1, int a2);
  virtual IPV4 * GetNetWlan0DNS();
  virtual IPV4 *GetNetWlan0DNS(int);
  virtual void SetNetWlan0DNS(IPV4*, int);
  virtual char *GetNetWlan0ApName();
  virtual char *GetNetWlan0ApName(int);
  virtual void SetNetWlan0ApName(char*, int);
  virtual ENUM_WIRELESS_SECURITY GetNetWlan0Security();
  virtual ENUM_WIRELESS_SECURITY GetNetWlan0Security(int);
  virtual void SetNetWlan0Security(ENUM_WIRELESS_SECURITY, int);
  virtual char *GetNetWlan0WepKey();
  virtual char *GetNetWlan0WepKey(int);
  virtual void SetNetWlan0WepKey(char*, int);
  virtual int GetNetWlan0ActiveWepKey();
  virtual int GetNetWlan0ActiveWepKey(int);
  virtual void SetNetWlan0ActiveWepKey(int, int);
  virtual IPV4 *GetNetWlan0DhcpdHostIP();
  virtual IPV4 *GetNetWlan0DhcpdHostIP(int);
  virtual void SetNetWlan0DhcpdHostIP(IPV4*, int);
  virtual IPV4 *GetNetWlan0DhcpdStartIP();
  virtual IPV4 *GetNetWlan0DhcpdStartIP(int);
  virtual void SetNetWlan0DhcpdStartIP(IPV4*, int);
  virtual IPV4 *GetNetWlan0DhcpdEndIP();
  virtual IPV4 *GetNetWlan0DhcpdEndIP(int);
  virtual void SetNetWlan0DhcpdEndIP(IPV4*, int);
  virtual ENUM_ON_OFF GetScreenSaver();
  virtual void SetScreenSaver(ENUM_ON_OFF);
  virtual ENUM_ON_OFF GetKenBurns();
  virtual void SetKenBurns(ENUM_ON_OFF);
  virtual ENUM_ON_OFF GetMoviePreview();
  virtual void SetMoviePreview(ENUM_ON_OFF);
  virtual ENUM_JUMP_DURATION GetJumpDuration();
  virtual void SetJumpDuration(ENUM_JUMP_DURATION);
  virtual ENUM_DEFAULT_SUBTITLE GetDefaultSubtitle();
  virtual void SetDefaultSubtitle(ENUM_DEFAULT_SUBTITLE);
  virtual ENUM_SLEEP_TIMER GetSleepTimer();
  virtual void SetSleepTimer(ENUM_SLEEP_TIMER);
  virtual bool GetDivXCode(char **code);
  virtual void SetDivXCode(char*);
};
