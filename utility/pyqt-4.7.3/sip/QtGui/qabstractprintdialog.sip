// qabstractprintdialog.sip generated by MetaSIP on Fri Apr 16 11:32:08 2010
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// Please review the following information to ensure GNU General
// Public Licensing requirements will be met:
// http://trolltech.com/products/qt/licenses/licensing/opensource/. If
// you are unsure which license is appropriate for your use, please
// review the following information:
// http://trolltech.com/products/qt/licenses/licensing/licensingoverview
// or contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%ModuleCode
#include <qabstractprintdialog.h>
%End

%If (PyQt_Printer)

class QAbstractPrintDialog : QDialog
{

%TypeHeaderCode
#include <qabstractprintdialog.h>
%End

public:
    enum PrintRange
    {
        AllPages,
        Selection,
        PageRange,
    };

    enum PrintDialogOption
    {
        None,
        PrintToFile,
        PrintSelection,
        PrintPageRange,
        PrintCollateCopies,
%If (Qt_4_4_0 -)
        PrintShowPageSize,
%End
%If (Qt_4_4_0 -)
        DontUseSheet,
%End
    };

    typedef QFlags<QAbstractPrintDialog::PrintDialogOption> PrintDialogOptions;
%If (PyQt_PrintDialog)
    QAbstractPrintDialog(QPrinter *, QWidget *parent /TransferThis/ = 0);
%If (Qt_4_5_0 -)
    virtual ~QAbstractPrintDialog();
%End
    virtual int exec() = 0 /PyName=exec_,ReleaseGIL/;
%If (Py_v3)
    virtual int exec() = 0 /ReleaseGIL/;
%End
    void addEnabledOption(QAbstractPrintDialog::PrintDialogOption);
    void setEnabledOptions(QFlags<QAbstractPrintDialog::PrintDialogOption>);
    QFlags<QAbstractPrintDialog::PrintDialogOption> enabledOptions() const;
    bool isOptionEnabled(QAbstractPrintDialog::PrintDialogOption) const;
    void setPrintRange(QAbstractPrintDialog::PrintRange);
    QAbstractPrintDialog::PrintRange printRange() const;
    void setMinMax(int, int);
    int minPage() const;
    int maxPage() const;
    void setFromTo(int, int);
    int fromPage() const;
    int toPage() const;
    QPrinter *printer() const;
%If (Qt_4_4_0 -)
    void setOptionTabs(const QList<QWidget*> &);
%End

private:
    QAbstractPrintDialog(const QAbstractPrintDialog &);

public:
%End // PyQt_PrintDialog
};

%End
%If (PyQt_Printer)
QFlags<QAbstractPrintDialog::PrintDialogOption> operator|(QAbstractPrintDialog::PrintDialogOption, QFlags<QAbstractPrintDialog::PrintDialogOption>);
%End
