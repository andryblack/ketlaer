// qcolordialog.sip generated by MetaSIP on Fri Apr 16 11:32:08 2010
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// Please review the following information to ensure GNU General
// Public Licensing requirements will be met:
// http://trolltech.com/products/qt/licenses/licensing/opensource/. If
// you are unsure which license is appropriate for your use, please
// review the following information:
// http://trolltech.com/products/qt/licenses/licensing/licensingoverview
// or contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%ModuleCode
#include <qcolordialog.h>
%End

class QColorDialog : QDialog
{

%TypeHeaderCode
#include <qcolordialog.h>
%End

public:
%If (Qt_4_5_0 -)

    enum ColorDialogOption
    {
        ShowAlphaChannel,
        NoButtons,
        DontUseNativeDialog,
    };

%End
%If (Qt_4_5_0 -)
    typedef QFlags<QColorDialog::ColorDialogOption> ColorDialogOptions;
%End
%If (Qt_4_5_0 -)
    explicit QColorDialog(QWidget *parent /TransferThis/ = 0);
%End
%If (Qt_4_5_0 -)
    QColorDialog(const QColor &, QWidget *parent /TransferThis/ = 0);
%End
%If (Qt_4_5_0 -)
    virtual ~QColorDialog();
%End
    static QColor getColor(const QColor &initial = Qt::white, QWidget *parent = 0) /ReleaseGIL/;
%If (Qt_4_5_0 -)
    static QColor getColor(const QColor &, QWidget *, const QString &, QFlags<QColorDialog::ColorDialogOption> options = 0) /ReleaseGIL/;
%End
%If (- Qt_4_3_0)
    static QRgb getRgba(QRgb, bool *ok = 0, QWidget *parent = 0) /ReleaseGIL/;
%End
%If (Qt_4_3_0 -)
    static QRgb getRgba(QRgb initial = 0xffffffff, bool *ok = 0, QWidget *parent = 0) /ReleaseGIL/;
%End
    static int customCount();
    static QRgb customColor(int);
    static void setCustomColor(int, QRgb);
    static void setStandardColor(int, QRgb);

signals:
%If (Qt_4_5_0 -)
    void colorSelected(const QColor &);
%End
%If (Qt_4_5_0 -)
    void currentColorChanged(const QColor &);
%End

protected:
%If (Qt_4_3_0 -)
    virtual void changeEvent(QEvent *);
%End
%If (Qt_4_5_0 -)
    virtual void done(int);
%End

private:
%If (- Qt_4_5_0)
    QColorDialog(QWidget * /TransferThis/ = 0, bool = false);
%End
    QColorDialog(const QColorDialog &);
%If (- Qt_4_5_0)
    virtual ~QColorDialog();
%End

public:
%If (Qt_4_5_0 -)
    void setCurrentColor(const QColor &);
%End
%If (Qt_4_5_0 -)
    QColor currentColor() const;
%End
%If (Qt_4_5_0 -)
    QColor selectedColor() const;
%End
%If (Qt_4_5_0 -)
    void setOption(QColorDialog::ColorDialogOption, bool on = true);
%End
%If (Qt_4_5_0 -)
    bool testOption(QColorDialog::ColorDialogOption) const;
%End
%If (Qt_4_5_0 -)
    void setOptions(QFlags<QColorDialog::ColorDialogOption>);
%End
%If (Qt_4_5_0 -)
    QFlags<QColorDialog::ColorDialogOption> options() const;
%End
%If (Qt_4_5_0 -)
    void open();
%End
%If (Qt_4_5_0 -)
    void open(SIP_RXOBJ_CON, SIP_SLOT_CON()) [void (QObject *receiver, const char *member)];
%End
%If (Qt_4_5_0 -)
    virtual void setVisible(bool);
%End
};

%If (Qt_4_5_0 -)
QFlags<QColorDialog::ColorDialogOption> operator|(QColorDialog::ColorDialogOption, QFlags<QColorDialog::ColorDialogOption>);
%End
