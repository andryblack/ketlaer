// qtreewidgetitemiterator.sip generated by MetaSIP on Fri Apr 16 11:32:08 2010
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// Please review the following information to ensure GNU General
// Public Licensing requirements will be met:
// http://trolltech.com/products/qt/licenses/licensing/opensource/. If
// you are unsure which license is appropriate for your use, please
// review the following information:
// http://trolltech.com/products/qt/licenses/licensing/licensingoverview
// or contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%ModuleCode
#include <qtreewidgetitemiterator.h>
%End

class QTreeWidgetItemIterator
{

%TypeHeaderCode
#include <qtreewidgetitemiterator.h>
%End

public:
    enum IteratorFlag
    {
        All,
        Hidden,
        NotHidden,
        Selected,
        Unselected,
        Selectable,
        NotSelectable,
        DragEnabled,
        DragDisabled,
        DropEnabled,
        DropDisabled,
        HasChildren,
        NoChildren,
        Checked,
        NotChecked,
        Enabled,
        Disabled,
        Editable,
        NotEditable,
        UserFlag,
    };

    typedef QFlags<QTreeWidgetItemIterator::IteratorFlag> IteratorFlags;
    QTreeWidgetItemIterator(const QTreeWidgetItemIterator &);
    QTreeWidgetItemIterator(QTreeWidget *, QFlags<QTreeWidgetItemIterator::IteratorFlag> flags = All);
    QTreeWidgetItemIterator(QTreeWidgetItem *, QFlags<QTreeWidgetItemIterator::IteratorFlag> flags = All);
    ~QTreeWidgetItemIterator();
    QTreeWidgetItem *value() const;
%MethodCode
        // SIP doesn't support operator* so this is a thin wrapper around it.
        sipRes = sipCpp->operator*();
%End

    QTreeWidgetItemIterator &operator+=(int);
    QTreeWidgetItemIterator &operator-=(int);
};

QFlags<QTreeWidgetItemIterator::IteratorFlag> operator|(QTreeWidgetItemIterator::IteratorFlag, QFlags<QTreeWidgetItemIterator::IteratorFlag>);
