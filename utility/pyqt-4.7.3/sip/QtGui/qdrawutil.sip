// qdrawutil.sip generated by MetaSIP on Fri Apr 16 11:32:08 2010
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// Please review the following information to ensure GNU General
// Public Licensing requirements will be met:
// http://trolltech.com/products/qt/licenses/licensing/opensource/. If
// you are unsure which license is appropriate for your use, please
// review the following information:
// http://trolltech.com/products/qt/licenses/licensing/licensingoverview
// or contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%ModuleCode
#include <qdrawutil.h>
%End

void qDrawShadeLine(QPainter *, int, int, int, int, const QPalette &, bool sunken = true, int lineWidth = 1, int midLineWidth = 0);
void qDrawShadeLine(QPainter *, const QPoint &, const QPoint &, const QPalette &, bool sunken = true, int lineWidth = 1, int midLineWidth = 0);
void qDrawShadeRect(QPainter *, int, int, int, int, const QPalette &, bool sunken = false, int lineWidth = 1, int midLineWidth = 0, const QBrush *fill = 0);
void qDrawShadeRect(QPainter *, const QRect &, const QPalette &, bool sunken = false, int lineWidth = 1, int midLineWidth = 0, const QBrush *fill = 0);
void qDrawShadePanel(QPainter *, int, int, int, int, const QPalette &, bool sunken = false, int lineWidth = 1, const QBrush *fill = 0);
void qDrawShadePanel(QPainter *, const QRect &, const QPalette &, bool sunken = false, int lineWidth = 1, const QBrush *fill = 0);
void qDrawWinButton(QPainter *, int, int, int, int, const QPalette &, bool sunken = false, const QBrush *fill = 0);
void qDrawWinButton(QPainter *, const QRect &, const QPalette &, bool sunken = false, const QBrush *fill = 0);
void qDrawWinPanel(QPainter *, int, int, int, int, const QPalette &, bool sunken = false, const QBrush *fill = 0);
void qDrawWinPanel(QPainter *, const QRect &, const QPalette &, bool sunken = false, const QBrush *fill = 0);
void qDrawPlainRect(QPainter *, int, int, int, int, const QColor &, int lineWidth = 1, const QBrush *fill = 0);
void qDrawPlainRect(QPainter *, const QRect &, const QColor &, int lineWidth = 1, const QBrush *fill = 0);
%If (Qt_4_6_0 -)
void qDrawBorderPixmap(QPainter *, const QRect &, const QMargins &, const QPixmap &);
%End
