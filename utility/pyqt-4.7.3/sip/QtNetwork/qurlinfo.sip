// qurlinfo.sip generated by MetaSIP on Fri Apr 16 11:32:08 2010
//
// This file is part of the QtNetwork Python extension module.
//
// Copyright (c) 2010 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// Please review the following information to ensure GNU General
// Public Licensing requirements will be met:
// http://trolltech.com/products/qt/licenses/licensing/opensource/. If
// you are unsure which license is appropriate for your use, please
// review the following information:
// http://trolltech.com/products/qt/licenses/licensing/licensingoverview
// or contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QUrlInfo
{

%TypeHeaderCode
#include <qurlinfo.h>
%End

public:
    enum PermissionSpec
    {
        ReadOwner,
        WriteOwner,
        ExeOwner,
        ReadGroup,
        WriteGroup,
        ExeGroup,
        ReadOther,
        WriteOther,
        ExeOther,
    };

    QUrlInfo();
    QUrlInfo(const QUrlInfo &);
    QUrlInfo(const QString &, int, const QString &, const QString &, qint64, const QDateTime &, const QDateTime &, bool, bool, bool, bool, bool, bool);
    QUrlInfo(const QUrl &, int, const QString &, const QString &, qint64, const QDateTime &, const QDateTime &, bool, bool, bool, bool, bool, bool);
    virtual ~QUrlInfo();
    virtual void setName(const QString &);
    virtual void setDir(bool);
    virtual void setFile(bool);
    virtual void setSymLink(bool);
    virtual void setOwner(const QString &);
    virtual void setGroup(const QString &);
    virtual void setSize(qint64);
    virtual void setWritable(bool);
    virtual void setReadable(bool);
    virtual void setPermissions(int);
    virtual void setLastModified(const QDateTime &);
    bool isValid() const;
    QString name() const;
    int permissions() const;
    QString owner() const;
    QString group() const;
    qint64 size() const;
    QDateTime lastModified() const;
    QDateTime lastRead() const;
    bool isDir() const;
    bool isFile() const;
    bool isSymLink() const;
    bool isWritable() const;
    bool isReadable() const;
    bool isExecutable() const;
    static bool greaterThan(const QUrlInfo &, const QUrlInfo &, int);
    static bool lessThan(const QUrlInfo &, const QUrlInfo &, int);
    static bool equal(const QUrlInfo &, const QUrlInfo &, int);
%If (Qt_4_4_0 -)
    void setLastRead(const QDateTime &);
%End
    bool operator==(const QUrlInfo &) const;
%If (Qt_4_2_0 -)
    bool operator!=(const QUrlInfo &) const;
%End
};
